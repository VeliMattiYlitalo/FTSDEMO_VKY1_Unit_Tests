
***************** Output from TTTRUNNR *****************

 STTR043I Initializing simulation environment for: COBOL V4
 STTR043I Initializing simulation environment for: COBOL V5
 STTR011I totaltest zTargetRunner v170200 on 2019-12-02 09:26.12��������������������������������������
 STTR012I Options set to EXIT(),STUBS(ON),REPEAT(0),ARGTYPE(��������)
 STTR013I Processing test suite CWXTSUBC_Sales_Scenario
 STTR014I Processing test scenario CWXTSUBC_Sales_Scenario
 STTR028I Processing test case CWXTSUBCCase1
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase2
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase4
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase5
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase6
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase8
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase9
 STTR006I Executing target CWXTSUBC
 STTR028I Processing test case CWXTSUBCCase10
 STTR006I Executing target CWXTSUBC
 STTR008I All targets successfully executed

***************** Output from TTOUT *****************

 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9028
 ---TARGCALL---entry newTARGET: 386A9028
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386A9090
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A9090
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9090
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9090
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386A9100
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A90A0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A9100
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9100
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9100
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386A90D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A90A0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A90A0
 ---addTargetArg---workingArea: 386A90D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A90D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A90D0
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9110
 ---TARGCALL---entry newTARGET: 386A9110
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386A97D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A97E0
 ---addTargetArg---workingArea: 386A97D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A97D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A97D0
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386A9840
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A97E0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A97E0
 ---addTargetArg---workingArea: 386A9840
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9840
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9840
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386A9810
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A97E0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A97E0
 ---addTargetArg---workingArea: 386A9810
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9810
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9810
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9850
 ---TARGCALL---entry newTARGET: 386A9850
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386A9F10
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9F20
 ---addTargetArg---workingArea: 386A9F10
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9F10
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9F10
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386A9F80
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A9F20
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9F20
 ---addTargetArg---workingArea: 386A9F80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9F80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9F80
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386A9F50
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386A9F20
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386A9F20
 ---addTargetArg---workingArea: 386A9F50
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386A9F50
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386A9F50
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386A9F90
 ---TARGCALL---entry newTARGET: 386A9F90
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AA650
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA660
 ---addTargetArg---workingArea: 386AA650
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA650
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA650
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386AA6C0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA660
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA660
 ---addTargetArg---workingArea: 386AA6C0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA6C0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA6C0
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386AA690
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AA660
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AA660
 ---addTargetArg---workingArea: 386AA690
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AA690
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AA690
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AA6D0
 ---TARGCALL---entry newTARGET: 386AA6D0
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AAD90
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AADA0
 ---addTargetArg---workingArea: 386AAD90
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AAD90
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AAD90
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386AAE00
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AADA0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AADA0
 ---addTargetArg---workingArea: 386AAE00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AAE00
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AAE00
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386AADD0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AADA0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AADA0
 ---addTargetArg---workingArea: 386AADD0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AADD0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AADD0
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AAE10
 ---TARGCALL---entry newTARGET: 386AAE10
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AB4D0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB4E0
 ---addTargetArg---workingArea: 386AB4D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB4D0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB4D0
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386AB540
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB4E0
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB4E0
 ---addTargetArg---workingArea: 386AB540
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB540
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB540
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386AB510
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AB4E0
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AB4E0
 ---addTargetArg---workingArea: 386AB510
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AB510
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AB510
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386AB550
 ---TARGCALL---entry newTARGET: 386AB550
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386ABC10
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ABC20
 ---addTargetArg---workingArea: 386ABC10
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ABC10
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ABC10
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386ABC80
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386ABC20
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ABC20
 ---addTargetArg---workingArea: 386ABC80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ABC80
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ABC80
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386ABC50
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386ABC20
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386ABC20
 ---addTargetArg---workingArea: 386ABC50
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386ABC50
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386ABC50
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB , epName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 4, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB , csectName = CWXTSUBC
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019284, Length = 40
   data = c3e7c3e6e7e3e2e4c2c309394bdb7a18037ba0a06a8401ef06e079bc000000000000000000000000
   program = CWXTSUBC, ddio(26) = SALESSUP.VKY1.QA1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWXTCOB , csect: CWXTSUBC, entry: CWXTSUBC
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 386ABC90
 ---TARGCALL---entry newTARGET: 386ABC90
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 beforeLength: 1
 afterLength: 1
 ---T addTargetArg---entry
 ---setData---entry
 bL: 1, aL: 1
 ---setData---exit --- A(data): 386AC350
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC360
 ---addTargetArg---workingArea: 386AC350
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC350
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC350
 ---TARGARG---entry
 beforeLength: 8
 afterLength: 8
 ---T addTargetArg---entry
 ---setData---entry
 bL: 8, aL: 8
 ---setData---exit --- A(data): 386AC3C0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC360
 AV #: 1
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC360
 ---addTargetArg---workingArea: 386AC3C0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC3C0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC3C0
 ---TARGARG---entry
 beforeLength: 4
 afterLength: 4
 ---T addTargetArg---entry
 ---setData---entry
 bL: 4, aL: 4
 ---setData---exit --- A(data): 386AC390
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---addTargetArg---entry
 AV ptr: 386AC360
 AV #: 2
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0, avPA ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 AV ptr: 386AC360
 ---addTargetArg---workingArea: 386AC390
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 386AC390
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 386AC390
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 1, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 8, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 1
 ---cxx retrieveNextAV---exit: 1
 ---TGTRTRV---exit
 ---TGTRTRV---entry
 ---cxx retrieveNextAV---entry
 ---C retrieveNextAV---entry
 ---buildAvRec---entry
 length: 4, ptrSz: 0
 ---buildAvRec---exit: 10
 ---C retrieveNextAV---exit: 10
 ---cxx retrieveNextAV---exit: 10
 ---TGTRTRV---exit
